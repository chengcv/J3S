clear
clc
tr_lab = zeros(108,1);
for i = 1 : 18 * 6
   tr_lab(i,1) = floor((i-1)/6) + 1;   
end
tt_lab = tr_lab;
% sigg = [0,5,10,15,20];
b = 0.4;
alpha = 0.3;

for k = 1 : length(sigg)
    param.sig  = sigg(k);                  % sigma
    param  = getParam(param);
    sum = 1;
%     load(['C:\sparsecode\uiuc_noise',num2str(param.sig),'.mat']);
    load('C:\sparsecode\uiuc_noise0.mat');
    load('C:\sparsecode\CSRGC\uiuc_data_ori.mat');
%     deepf = uiuc_data;
    for x = 1 : size(deepf,1)
        for y = 1 : size(deepf,2)
            uiuc_dat{sum,1} = double(deepf{x,y});
            W = UTL_imagedenoising(double(uiuc_data{x,y}), param);
%             W = UTL_imagedenoising(double(deepf{x,y}), param);
            SpaDic(:,sum) = W(:);
            sum = sum + 1;
        end
    end
    Gau = genGaussian(uiuc_dat,alpha,b);
    save('uiuc_dic_sigma0','Gau','SpaDic','tr_lab','tt_lab','b','alpha');
%     save(['uiuc_dic_sigma',num2str(param.sig)],'Gau','SpaDic','tr_lab','tt_lab','b','alpha');
% end

% root_data = dir('C:\sparsecode\hell_20\UIUCmaterial');
% sum = 1;
% for i = 3 : size(root_data, 1)
%     c_root = fullfile('C:\sparsecode\hell_20\UIUCmaterial', root_data(i).name);
%     img_path = dir(c_root);
%     for j = 3 :size(img_path, 1)
%        load([c_root '\' img_path(j).name])
%        uiuc_dat{sum,1} = double(want);
%        W = UTL_imagedenoising(double(want), param);
%        SpaDic(:,sum) = W(:);
%        sum = sum + 1;
%     end
% end
% Gau = genGaussian(uiuc_dat,alpha,b);
% save uiuc_b0.4_a0.3_noise20.mat Gau SpaDic tr_lab tt_lab



